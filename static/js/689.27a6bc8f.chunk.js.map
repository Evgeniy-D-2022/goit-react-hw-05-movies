{"version":3,"file":"static/js/689.27a6bc8f.chunk.js","mappings":"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","sources":["Api.js","webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://react-homework-template/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst MAIN_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'c9873e67c5e03bd61e79d852c2fd46a6';\n\nexport async function getTrendindMovies() {\n    const url = `${MAIN_URL}/trending/movie/day?api_key=${API_KEY}`;\n    try {\n        const response = await axios.get(url)\n        return response.data;\n    }\n    catch (error) {\n       console.log(error);\n    }\n};\n\nexport async function getMovieId(id) {\n    const url = `${MAIN_URL}/movie/${id}?api_key=${API_KEY}`;\n    try {\n        const response = await axios.get(url)\n        return response.data;\n    }\n    catch (error) {\n       console.log(error);\n    }\n};\n\nexport async function getMovieCast(id) {\n    const url = `${MAIN_URL}/movie/${id}/credits?api_key=${API_KEY}`;\n    try {\n        const response = await axios.get(url)\n        // return response.data;\n        return response.data.cast;\n    }\n    catch (error) {\n       console.log(error);\n    }\n};\n\nexport async function getMovieReview(id) {\n    const url = `${MAIN_URL}/movie/${id}/reviews?api_key=${API_KEY}`;\n    try {\n        const response = await axios.get(url)\n        // return response.data;\n        return response.data.results;\n    }\n    catch (error) {\n       console.log(error);\n    }\n};\n\nexport async function getMovieQuery(query, page) {\n    const url = `${MAIN_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`;\n    try {\n        const response = await axios.get(url)\n        return response.data;\n    }\n    catch (error) {\n       console.log(error);\n    }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"home_list\":\"MovieList_home_list__oYkWj\",\"movie_img\":\"MovieList_movie_img__nhGcc\",\"movie_item\":\"MovieList_movie_item__Q205J\"};","import { Link, useLocation } from \"react-router-dom\";\nimport css from \"./MovieList.module.css\";\nimport notfound from \"../../images/not-found.JPG\";\nimport PropTypes from \"prop-types\";\n\nconst MovieList = ({ movies }) => {\n    const location = useLocation();\n    return (\n        <div className={css.home_container}>\n          <ul className={css.home_list}>\n           {movies.map(movie => {\n            return (\n              <li className={css.movie_item} key={movie.id}>\n                <Link\n                state={{ from: location }}\n                to={`/movies/${movie.id}`}>\n                  <img className={css.movie_img}\n                src={movie.poster_path\n                    ? `https://image.tmdb.org/t/p/w300${movie.poster_path}`\n                    : notfound\n                }\n                alt={movie.title}\n              />\n                </Link>\n              </li>\n            )\n           })}\n          </ul>\n          </div>\n    )\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  movies: PropTypes.array,\n}","// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"SearchBar_searchbar__xBucJ\",\"SearchForm\":\"SearchBar_SearchForm__J+i1a\",\"SearchForm_button\":\"SearchBar_SearchForm_button__WJfDq\",\"SearchForm_button_label\":\"SearchBar_SearchForm_button_label__tkcf+\",\"SearchForm_input\":\"SearchBar_SearchForm_input__-FIrC\"};","import { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport css from './SearchBar.module.css';\nimport { FaSearch } from 'react-icons/fa';\n\nconst SearchBar=({ setParams }) => {\n  const [query, setQuery] = useState('')\n\n  const onChangeInput = e => {\n    setQuery(e.target.value.trim().toLowerCase());\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setParams(query);\n  }\n\n    return (\n      <header className={css.searchbar}>\n  <form className={css.SearchForm} onSubmit={handleSubmit}>\n    <button type=\"submit\" className={css.SearchForm_button}>\n      <FaSearch size={25}/>\n    </button>\n\n    <input\n      className={css.SearchForm_input}\n      type=\"text\"\n      name='search'\n      value={query}\n      onChange={onChangeInput}\n      autoComplete=\"off\"\n      autoFocus\n      placeholder=\"Search movie\"\n    />\n  </form>\n</header>\n\n    )\n  };\n\nexport default SearchBar;\n\nSearchBar.propType = {\n  onSubmit: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movies_container\":\"Movies_movies_container__H3K6e\",\"error_text\":\"Movies_error_text__Q0xLy\"};","import { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { getMovieQuery } from \"../../Api\"\nimport SearchBar from \"components/SearchBar/SearchBar\";\nimport Loader from \"components/Loader/Loader\";\nimport MovieList from \"components/MovieList/MovieList\";\nimport css from \"./Movies.module.css\";\n\nconst Movies = () => {\n    const [movies, setMovies] = useState([]);\n    const [page, setPage] = useState(1);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    const query = searchParams.get('query') ?? '';\n\n    useEffect(() => {\n        if (query === '') return;\n\n        const getByQuery = async() => {\n            setLoading(true);\n            try {\n                const response = await getMovieQuery(query, page);\n                const searchMovies = response.results;\n                if(searchMovies.length === 0) {\n                    return setError(`Not Found ${query}`)\n                }\n                setMovies(searchMovies)            \n                \n            } catch (error) {\n                setError(error.message)    \n            }\n            finally {\n                setLoading(false)\n            }\n        };\n        getByQuery()  \n    }, [page, query]);\n\n    // const handleSubmit = query => {\n    //     const params = query !== '' ? { query } : {};\n    //     setSearchParams(params);   \n    // };\n\n    const setParams = newQuery => {\n        if (newQuery === '') {\n          alert('Empty string');\n          return;\n        } else if (query === newQuery) {\n          alert('Try again');\n          return;\n        }\n    \n        setPage(1);\n        setMovies([]);\n        setError(null);\n        setLoading(true);\n        setSearchParams({ query: newQuery });\n      };\n\n    return (\n        <div className={css.movies_container}>\n            <SearchBar setParams={setParams}/>\n            {error && <div className={css.error_text}>{error}</div>}\n      {movies.length !== 0 && query !== '' && (\n        <>\n          <MovieList movies={movies} />\n          {loading && <Loader />}\n        </>\n      )}\n      {loading && <Loader />}\n        </div>\n    );\n};\n\nexport default Movies;"],"names":["MAIN_URL","API_KEY","getTrendindMovies","url","axios","response","data","console","log","getMovieId","id","getMovieCast","cast","getMovieReview","results","getMovieQuery","query","page","movies","location","useLocation","className","css","map","movie","state","from","to","src","poster_path","notfound","alt","title","SearchBar","setParams","useState","setQuery","onSubmit","e","preventDefault","type","size","name","value","onChange","target","trim","toLowerCase","autoComplete","autoFocus","placeholder","propType","PropTypes","setMovies","setPage","error","setError","loading","setLoading","useSearchParams","searchParams","setSearchParams","get","useEffect","getByQuery","searchMovies","length","message","newQuery","alert","MovieList","Loader"],"sourceRoot":""}
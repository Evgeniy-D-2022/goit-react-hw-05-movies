{"version":3,"file":"static/js/76.5490ee2e.chunk.js","mappings":"kTAEMA,EAAW,+BACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6FACGC,EADH,UACYH,EADZ,uCACmDC,GADnD,kBAGwBG,EAAAA,EAAAA,IAAUD,GAHlC,cAGOE,EAHP,yBAIQA,EAASC,MAJjB,gCAOAC,QAAQC,IAAR,MAPA,gFAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BC,GAA1B,gFACGP,EADH,UACYH,EADZ,kBAC8BU,EAD9B,oBAC4CT,GAD5C,kBAGwBG,EAAAA,EAAAA,IAAUD,GAHlC,cAGOE,EAHP,yBAIQA,EAASC,MAJjB,gCAOAC,QAAQC,IAAR,MAPA,gFAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BD,GAA5B,gFACGP,EADH,UACYH,EADZ,kBAC8BU,EAD9B,4BACoDT,GADpD,kBAGwBG,EAAAA,EAAAA,IAAUD,GAHlC,cAGOE,EAHP,yBAKQA,EAASC,KAAKM,MALtB,gCAQAL,QAAQC,IAAR,MARA,gFAYA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA8BH,GAA9B,gFACGP,EADH,UACYH,EADZ,kBAC8BU,EAD9B,4BACoDT,GADpD,kBAGwBG,EAAAA,EAAAA,IAAUD,GAHlC,cAGOE,EAHP,yBAKQA,EAASC,KAAKQ,SALtB,gCAQAP,QAAQC,IAAR,MARA,gFAYA,SAAeO,EAAtB,iDAAO,OAAP,oBAAO,WAA6BC,EAAOC,GAApC,gFACGd,EADH,UACYH,EADZ,iCAC6CC,EAD7C,kBAC8De,EAD9D,iBAC4EC,GAD5E,kBAGwBb,EAAAA,EAAAA,IAAUD,GAHlC,cAGOE,EAHP,yBAIQA,EAASC,MAJjB,gCAOAC,QAAQC,IAAR,MAPA,gF,4FClDP,GAAgB,UAAY,wBAAwB,UAAY,wBAAwB,UAAY,wBAAwB,eAAiB,6BAA6B,SAAW,wB,qCCuCrL,EAlCa,WACT,IAAQE,GAAOQ,EAAAA,EAAAA,MAAPR,GACR,GAAwBS,EAAAA,EAAAA,UAAS,IAAjC,eAAOP,EAAP,KAAaQ,EAAb,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACNV,EAAAA,EAAAA,IAAaD,GAAIY,MAAK,SAAAhB,GAAI,OAAGc,EAAQd,EAAX,GAC7B,GAAE,CAACI,KAGD,gBAAKa,UAAWC,EAAAA,UAAhB,UACC,eAAID,UAAWC,EAAAA,UAAf,SACKZ,GAAQA,EAAKa,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,UAAWC,EAAlC,EAAkCA,QAAlC,OACd,gBAAIN,UAAWC,EAAAA,UAAf,WACI,gBAAKD,UAAWC,EAAAA,SAAcM,IAChCJ,EAAY,yCAC0BA,GAClCK,EAENC,IAAKL,KACL,cAAGJ,UAAWC,EAAAA,UAAd,SAA8BG,IAC7BC,IACD,eAAGL,UAAWC,EAAAA,UAAd,WACE,iBAAMD,UAAWC,EAAAA,eAAjB,SAAqC,gBACpCI,OAXgCC,EADrB,OAqB7B,C","sources":["Api.js","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst MAIN_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'c9873e67c5e03bd61e79d852c2fd46a6';\n\nexport async function getTrendindMovies() {\n    const url = `${MAIN_URL}/trending/movie/day?api_key=${API_KEY}`;\n    try {\n        const response = await axios.get(url)\n        return response.data;\n    }\n    catch (error) {\n       console.log(error);\n    }\n};\n\nexport async function getMovieId(id) {\n    const url = `${MAIN_URL}/movie/${id}?api_key=${API_KEY}`;\n    try {\n        const response = await axios.get(url)\n        return response.data;\n    }\n    catch (error) {\n       console.log(error);\n    }\n};\n\nexport async function getMovieCast(id) {\n    const url = `${MAIN_URL}/movie/${id}/credits?api_key=${API_KEY}`;\n    try {\n        const response = await axios.get(url)\n        // return response.data;\n        return response.data.cast;\n    }\n    catch (error) {\n       console.log(error);\n    }\n};\n\nexport async function getMovieReview(id) {\n    const url = `${MAIN_URL}/movie/${id}/reviews?api_key=${API_KEY}`;\n    try {\n        const response = await axios.get(url)\n        // return response.data;\n        return response.data.results;\n    }\n    catch (error) {\n       console.log(error);\n    }\n};\n\nexport async function getMovieQuery(query, page) {\n    const url = `${MAIN_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`;\n    try {\n        const response = await axios.get(url)\n        return response.data;\n    }\n    catch (error) {\n       console.log(error);\n    }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cast_list\":\"Cast_cast_list__6yHmm\",\"cast_item\":\"Cast_cast_item__SSip9\",\"cast_text\":\"Cast_cast_text__yOs+U\",\"cast_character\":\"Cast_cast_character__ly--T\",\"cast_img\":\"Cast_cast_img__fJUn3\"};","import { useParams } from \"react-router-dom\";\nimport css from \"./Cast.module.css\";\nimport { useEffect, useState } from \"react\";\nimport { getMovieCast } from \"../../Api\";\nimport notfound from \"../../images/not-found.JPG\";\n\nconst Cast = () => {\n    const { id } = useParams();\n    const [cast, setCast] = useState([]);\n\n    useEffect(()=> {\n        getMovieCast(id).then(data=> setCast(data));\n    }, [id])\n\n    return (\n       <div className={css.cast_wrap}>\n        <ul className={css.cast_list}>\n            {cast && cast.map(({ profile_path, name, character, cast_id })=> (\n                <li className={css.cast_item} key={cast_id}>\n                    <img className={css.cast_img} src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w300${profile_path}`\n                    : notfound\n                }\n                alt={name} />\n                <p className={css.cast_text}>{name}</p>\n                {character && (\n                <p className={css.cast_text}>\n                  <span className={css.cast_character}>Character: </span>\n                  {character}\n                </p>\n              )}\n                </li>\n            ))}\n        </ul>\n       </div>\n    )\n\n}\n\nexport default Cast;"],"names":["MAIN_URL","API_KEY","getTrendindMovies","url","axios","response","data","console","log","getMovieId","id","getMovieCast","cast","getMovieReview","results","getMovieQuery","query","page","useParams","useState","setCast","useEffect","then","className","css","map","profile_path","name","character","cast_id","src","notfound","alt"],"sourceRoot":""}